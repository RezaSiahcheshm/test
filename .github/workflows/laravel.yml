# name: Test SSH Connection

# on:
#   push:
#     branches:
#       - main

# jobs:
#   test-ssh:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Add server to known_hosts
#       run: |
#         mkdir -p ~/.ssh
#         ssh-keyscan -H ${{ secrets.SERVER }} >> ~/.ssh/known_hosts

#     - name: Test SSH Connection
#       env:
#         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#         SERVER: ${{ secrets.SERVER }}
#         USERNAME: ${{ secrets.USERNAME }}
#       run: |
#         echo "$SSH_PRIVATE_KEY" > private_key
#         chmod 600 private_key
#         ssh -i private_key $USERNAME@$SERVER "uptime"

name: Deploy Laravel Project
run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: rezasiahcheshm/test:latest

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER }} >> ~/.ssh/known_hosts

      - name: Install Docker and Docker Compose on server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.SERVER }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $USERNAME@$SERVER <<EOF
          sudo apt update
          sudo apt install -y docker.io docker-compose
          EOF

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.SERVER }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $USERNAME@$SERVER <<EOF
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker pull rezasiahcheshm/test:latest
          cd /work
          docker-compose down
          docker-compose up -d
          EOF
